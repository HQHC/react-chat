{"version":3,"sources":["chat.js"],"names":["$","document","ready","flushUsers","users","count","text","empty","append","i","dblclick","this","attr","sender","receiver","removeClass","addClass","showSendTo","html","now","date","Date","time","getMonth","getDate","getHours","getMinutes","scrollDown","contentShow","scrollTop","scrollHeight","getElementById","cookie","undefined","click","ev","oEvent","event","preventDefault","name","val","replace","alert","ajax","url","type","dataType","data","success","style","visibility","window","location","reload","display","socket","io","emit","user","on","sys","msg","keydown","keyCode","confirm","focusout","element","trim","length","focus","jQuery"],"mappings":"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","file":"../main.min.js","sourcesContent":["(function($) {\n    $(document).ready(function() {\n\n        // 刷新用户在线列表\n        function flushUsers(users, count) {\n            // 显示在线人数\n            $('#user-label').text('在线用户 (' + count + ')');\n            // 清空之前用户列表，添加 \"所有人\" 选项并默认为选中\n            $('#users-list').empty().append('<li alt=\"all\" title=\"双击聊天\" class=\"sendto\">所有人</li>');\n            // 生成在线用户列表\n            for (var i in users) {\n                $('#users-list').append('<li alt=\"' + users[i] + '\" title=\"双击聊天\">' + users[i] + '</li>');\n            }\n            // 双击私聊\n            $('#users-list  li').dblclick(function() {\n                // 防止双击自己\n                if ($(this).attr('alt') != sender) {\n                    // 设置被双击的用户为私聊对象\n                    receiver = $(this).attr('alt');\n                    // 清除之前的选中效果\n                    $('#users-list  li').removeClass('sendto');\n                    // 给被双击的用户添加选中效果\n                    $(this).addClass('sendto');\n                    // 刷新正在对谁说话\n                    showSendTo();\n                }\n            });\n        }\n\n        // 显示正在对谁说话\n        function showSendTo() {\n            $('#sender').html(sender);\n            $('#receiver').html(receiver == 'all' ? '所有人' : receiver);\n        }\n\n        // 获取当前时间\n        function now() {\n            var date = new Date();\n            var time = (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + (date.getMinutes() < 10 ? ('0' + date.getMinutes()) : date.getMinutes());\n            return time;\n        }\n\n        // 使消息窗口接到消息时自动向下滚动\n        var contentShow = document.getElementById('content-show');\n        function scrollDown() {\n            contentShow.scrollTop = contentShow.scrollHeight;\n        }\n\n\n        // 从 cookie 中读取用户名，存于变量 sender\n        var sender = $.cookie('user');\n\n        // 若用户未登录\n        if (sender === undefined) {\n            $('.button-login').click(function(ev) {\n                var oEvent = ev || event;\n                oEvent.preventDefault();\n                var name = $('#name').val().replace(/(^\\s*)|(\\s*$)/g, '');\n                if (name === '' || name === null) {\n                    alert('用户名未输入!');\n                } else {\n                    $.ajax({\n                        url: '/',\n                        type: 'post',\n                        dataType: 'json',\n                        data: {\n                            'name': name\n                        },\n                        success: function(data) {\n                            if (data.success === false) {\n                                document.getElementById('warning').style.visibility = '';\n                            } else {\n                                document.getElementById('warning').style.visibility = 'hidden';\n                                window.location.reload();\n                            }\n                        }\n                    });\n                }\n            });\n            document.getElementById('login').style.display = '';\n        }\n\n\n        // 若用户已登录\n        if (sender !== undefined) {\n\n            // 设置默认接收对象为\"所有人\"\n            var receiver = 'all';\n\n            // 建立socket.io连接\n            var socket = io();\n\n            // 发送用户上线信号\n            socket.emit('online', {\n                user: sender\n            });\n\n            // 显示正在对谁说话\n            showSendTo();\n\n            // 监听其他用户上线\n            socket.on('online', function(data) {\n                // 显示系统消息\n                if (data.user != sender) {\n                    var sys = '<div class=\"message message-info\"><span class=\"icon icon-info\"></span>系统: 用户 ' + data.user + ' 上线了！</div>';\n                } else {\n                    var sys = '<div class=\"message message-info\"><span class=\"icon icon-info\"></span>系统: 欢迎进入聊天室！</div>';\n                }\n                $('#content-show').append(sys);\n                scrollDown();\n                // 刷新在线用户列表\n                flushUsers(data.users, data.count);\n            });\n\n            socket.on('send', function(data) {\n                // 对所有人\n                if (data.receiver == 'all') {\n                    $('#content-show').append('<div class=\"message message-sender\">' + data.sender + '<span class=\"message-time\"><span class=\"icon icon-time\"></span>' + now() + '</span></div><div class=\"message message-public\">' + data.msg + '</div>');\n                }\n                // 对用户私聊\n                if (data.receiver == sender) {\n                    $('#content-show').append('<div class=\"message message-sender\">' + data.sender + ' 对你说:<span class=\"message-time\"><span class=\"icon icon-time\"></span>' + now() + '</span></div><div class=\"message message-private\">' + data.msg + '</div>');\n                }\n                scrollDown();\n            });\n\n\n            // F5刷新清除所有聊天记录\n            $(window).keydown(function(ev) {\n                var oEvent = ev || event;\n                if (oEvent.keyCode == 116) {\n                    if (!confirm('刷新将会清除所有聊天记录，确定要刷新吗？')) {\n                        oEvent.preventDefault();\n                    }\n                }\n            });\n\n            // 为输入框添加placeholder\n            $('#input-message').focusout(function() {\n                var element = $(this);\n                if (!element.text().trim().length) {\n                    element.empty();\n                }\n            });\n\n            // 点击发布聊天信息\n            $('.button-send').click(function() {\n                // 获取要发送的信息\n                var msg = $('#input-message').html();\n                if (msg == '') return;\n                // 把发送的信息先添加在自己的页面中\n                if (receiver == 'all') {\n                    $('#content-show').append('<div class=\"message message-sender\">' + sender + '<span class=\"message-time\"><span class=\"icon icon-time\"></span>' + now() + '</span></div><div class=\"message message-public\">' + msg + '</div>');\n                } else {\n                    $('#content-show').append('<div class=\"message message-sender\">你对 ' + receiver + ' 说:<span class=\"message-time\"><span class=\"icon icon-time\"></span>' + now() + '</span></div><div class=\"message message-private\">' + msg + '</div>');\n                }\n                scrollDown();\n                // 向服务器发送信息\n                socket.emit('send', {\n                    sender: sender,\n                    receiver: receiver,\n                    msg: msg\n                });\n                // 清空输入框并获得焦点\n                $('#input-message').html('').focus();\n            });\n\n            // 清除屏幕聊天信息\n            $('.button-clear').click(function() {\n                $('#content-show').empty();\n            });\n\n\n            // 监听其他用户下线\n            socket.on('offline', function(data) {\n                // 显示系统消息\n                var sys = '<div class=\"message message-info\"><span class=\"icon icon-info\"></span>系统: 用户 ' + data.user + '  下线了！</div>';\n                $('#content-show').append(sys);\n                scrollDown();\n                // 刷新在线用户列表\n                flushUsers(data.users, data.count);\n                // 如果下线用户是私聊对象，改为对 \"所有人\"\n                if (data.user == receiver) {\n                    receiver = 'all';\n                    showSendTo();\n                }\n            });\n\n            // 服务器关闭或出错\n            socket.on('disconnect', function() {\n                var sys = '<div class=\"message message-warn\"><span class=\"icon icon-warn\"></span>系统: 连接服务器失败！</div>';\n                $('#content-show').append(sys);\n                scrollDown();\n                $('#users-list').empty();\n            });\n\n            // 重新启动服务器\n            socket.on('reconnect', function() {\n                var sys = '<div class=\"message message-success\"><span class=\"icon icon-success\"></span>系统: 重新连接服务器！</div>';\n                $('#content-show').append(sys);\n                scrollDown();\n                socket.emit('online', {\n                    user: sender\n                });\n            });\n        }\n\n    });\n})(jQuery);"]}